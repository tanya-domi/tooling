name: IAC

on:
  push:
    branches: 
      - main
    paths: 
      - Setup-infra/**
  pull_request:
    branches: 
      - main
    paths: 
      - Setup-infra/**
env:
    # credentials for deployment to AWS
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    # S3 bucket for the terraform state. 
    BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE }}
    AWS_REGION: eu-north-1

jobs:
    terraform:
        name: "Apply terraform code changes"
        runs-on: ubuntu-latest
        defaults:
            run:
                shell: bash
                working-directory: ./Setup-infra
        steps:
        - name: Checkout source code 
          uses: actions/checkout@v4

        - name: Setup Terraform with specified version on the runner
          uses: hashicorp/setup-terraform@v3

        - name: Terraform Init
          id: init
          run: terraform init -backend-config "bucket=$BUCKET_TF_STATE"

        - name: Terraform Format
          id: fmt
          run: terraform fmt -check
          continue-on-error: true 

        - name: Terraform Validate
          id: validate
          run: terraform validate

        - name: Terraform Plan
          id: plan
          run: terraform plan -no-color -input=false -out planfile
          continue-on-error: true 

        - name: Terraform Plan Status 
          if: steps.plan.outcome == 'failure'
          run: exit 1

        - name: Terraform Apply
          id: apply
          if: github.ref == 'refs/heads/main' && github.event_name == 'push'
          run: terraform apply -auto-approve #-input=false -parallelism=1 planfile

# run-scripts:
#     needs: terraform
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       - name: Grant execute permissions to scripts
#         run: |
#           chmod +x ./runner.sh
#           chmod +x ./argocd.sh

#       - name: Run first script
#         run: |
#             ./runner.sh
#              echo "Running the first script!"

#       - name: Run second script
#         run: |
#           ./argocd.sh
#           echo "Running the second script!"

